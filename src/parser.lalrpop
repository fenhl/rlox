use crate::ast::*;

grammar;

pub(crate) Program = Declaration*;

Declaration = {
    Statement,
    //TODO others
};

Statement: Stmt = {
    <Expression> ";" => Stmt::Expr(<>),
    "print" <Expression> ";" => Stmt::Print(<>),
    //TODO others
};

Expression: Expr = {
    <op:UnaryOp> <expr:Expression> => Expr::Unary(op, Box::new(expr)),
    "true" => Expr::True,
    "false" => Expr::False,
    "nil" => Expr::Nil,
    //TODO others
};

UnaryOp: UnaryOp = {
    "!" => UnaryOp::Not,
    "-" => UnaryOp::Neg,
};
